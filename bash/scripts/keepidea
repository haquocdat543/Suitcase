#!/bin/bash

# Color
BLACK='\033[0;30m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
GRAY='\033[0;37m'
GRAY2='\033[1;30m'
RED2='\033[1;31m'
GREEN2='\033[1;32m'
YELLOW='\033[1;33m'
BLUE2='\033[1;34m'
PURPLE2='\033[1;35m'
CYAN2='\033[1;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# Setup basic directory information
IDEA_DIRECTORY="${HOME}/.idea"
IDEA_GIT_DIRECTORY="${HOME}/.idea/.git"
LIFE_DIRECTORY="life"
WEEK_DIRECTORY="week"
MONTH_DIRECTORY="month"
YEAR_DIRECTORY="year"
DAILY_DIRECTORY="daily"

# options & arguments
OPTION=${1}
CATEGORY=${2}
ARGUMENT=${2}

# --today ->> today
# --day ->> specific date
# --range ->> from date to date

# date & time
CURRENT_DATE=$(date "+%d-%m-%y")
CURRENT_TIME=$(date "+%H:%M:%S")
CURRENT_DATETIME=$(date "+%d-%m-%y|%H:%M:%S")

# Today variables
CURRENT_DATETIME_DIRECTORY=${IDEA_DIRECTORY}/$(date "+%d-%m-%y|%H:%M:%S")
CURRENT_DATE_DIRECTORY=${IDEA_DIRECTORY}/$(date "+%d-%m-%y")
CURRENT_TIME_FILE=${IDEA_DIRECTORY}/${CURRENT_DATE}/$(date "+%H:%M:%S")

function day {
	local INPUT=${1}

	# date
	# 20-10-2024 [ full ]
	# 20-10 [ current year ]
	# 20 [ current month and year ]

	DAY_MONTH_YEAR_PATTERN="^[0-9]{2}-[0-9]{2}-[0-9]{4}$"
	DAY_MONTH_PATTERN="^[0-9]{2}-[0-9]{2}$"
	DAY_PATTERN="^[0-9]{2}$"

	if [[ ${INPUT} =~ ${DAY_MONTH_YEAR_PATTERN} ]]; then
		DATE=${INPUT}
	elif [[ ${INPUT} =~ ${DAY_MONTH_PATTERN} ]]; then
		CURRENT_YEAR=$(date "+%y")
		DATE="${INPUT}-${CURRENT_YEAR}"
	elif [[ ${INPUT} =~ ${DAY_PATTERN} ]]; then
		CURRENT_YEAR=$(date "+%y")
		CURRENT_MONTH=$(date "+%m")
		DATE="${INPUT}-${CURRENT_MONTH}-${CURRENT_YEAR}"
	fi
}

function day_range {
	local FIRST_INPUT=${1}
	local SECOND_INPUT=${2}

	day ${FIRST_INPUT}
	FIRST_DATE=${DATE}
	day ${SECOND_INPUT}
	SECOND_DATE=${DATE}
}

function check {

	if [[ ! -d ${IDEA_DIRECTORY} ]]; then
		echo "Your ${IDEA_DIRECTORY} directory does not exist"
		echo "Exiting..."
		exit
		if [[ ! -d ${IDEA_GIT_DIRECTORY} ]]; then
			echo "Your ${IDEA_DIRECTORY} is not a git directory"
			echo "Exiting..."
			exit
		else
			continue
		fi
	else
		continue
	fi
}

function list {

	IDEAS=$(ls ${CURRENT_DATE_DIRECTORY})
	echo "Today [${CURRENT_DATE}]"
	INDEX=1
	for TIME in ${IDEAS}; do
		CONTENT=$(cat ${CURRENT_DATE_DIRECTORY}/${TIME})
		echo -e "${INDEX} - ${YELLOW}[${TIME}]${NC}: ${GREEN}[${CONTENT}]${NC}"
		INDEX=$((${INDEX} + 1))
	done
}

function add {

	echo "Please enter idea"
	read IDEA
	mkdir -p ${CURRENT_DATE_DIRECTORY}
	echo ${IDEA} >>${CURRENT_TIME_FILE}
	git -C ${IDEA_DIRECTORY} add ${CURRENT_TIME_FILE}
	git -C ${IDEA_DIRECTORY} commit -m "Add new idea @ ${CURRENT_DATETIME}"
}

function push {
	git -C ${IDEA_DIRECTORY} push
}

function pull {
	git -C ${IDEA_DIRECTORY} pull --rebase
}

case ${OPTION} in
"add")
	echo "### [ADD NEW IDEA] ###"
	check
	add
	;;
"list" | "Wednesday" | "Thursday")
	echo "### [LIST IDEAS] ###"
	check
	list
	;;
"push")
	echo "### [PUSH IDEAS] ###"
	check
	push
	;;
"pull")
	echo "### [PULL IDEAS] ###"
	check
	pull
	;;
*)
	echo "Options guideline"
	echo "add: to add new idea"
	echo "list: to list today ideas"
	echo "push: to push ideas"
	echo "pull[rebase]: to pull ideas"
	;;
esac
