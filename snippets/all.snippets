snippet disk "Disk" b
${1:/dev/sbd1}	${2:/home/user/disk}	${3:ext4}	${4:defaults}	${5:0}       ${6:0}
endsnippet

snippet jk "Jenkin" b
pipeline{
    agent { label 'Jenkin-Agent' }
    tools{
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME=tool 'sonar'
        GIT_REPO_NAME = "argocd-test"
        GIT_USER_NAME = "haquocdat543"
    }
    stages {
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('Checkout from Git'){
            steps{
                git branch: 'main', credentialsId: 'github', url: 'https://github.com/haquocdat543/draft3.git'
            }
        }
        stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonar-server') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Vue1.0 \
                    -Dsonar.projectKey=Vue1.0 '''
                }
            }
        }
        stage("quality gate"){
           steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar' 
                }
            } 
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage("Docker Build & Push"){
            steps{
                script{
                   withDockerRegistry(credentialsId: 'docker', toolName: 'docker'){   
                       sh "docker build -t vuev2 ."
                       sh "docker tag vuev2 haquocdat543/vuev2:latest "
                       sh "docker push haquocdat543/vuev2:latest "
                    }
                }
            }
        }
        stage("TRIVY"){
            steps{
                sh "trivy image haquocdat543/vuev2:latest > trivyimage.txt" 
            }
        }
	stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/haquocdat543/ArgoCD.git'
            }
        }
        stage('Update Deployment File') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'github')]) {
                       NEW_IMAGE_NAME = "haquocdat543/vuev2:latest"
                       sh "sed -i 's|image: .*|image: $NEW_IMAGE_NAME|' deployment.yml"
                       sh 'git add deployment.yml'
                       sh "git commit -m 'Update deployment image to $NEW_IMAGE_NAME'"
                       sh "git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main"
                    }
                }
            }
        }
    }
}
endsnippet

snippet jkst "Jenkin stage" b
        stage("${1:Stage Name}") {
            steps {
                sh """
                   ${2:cat deployment.yaml
                   sed -i 's/${APP_NAME}.*/${APP_NAME}:${IMAGE_TAG}/g' deployment.yaml
                   cat deployment.yaml}
                """
            }
endsnippet

snippet make "Test" b
CC = ${1:gcc}
SOURCE = ${2:*.c}
OUTPUT = ${3:output}.exe

build: compile run

compile:
	$(CC) -o $(OUTPUT) $(SOURCE) 
run:
	./$3.exe
endsnippet

snippet ccm "CodeCommit host config" b
Host git-codecommit.*.amazonaws.com
  User ${1:APKARMNDORPRYA4G76KM}
    IdentityFile ~/.ssh/codecommit_rsa $2
endsnippet

snippet ansk "Ansible ssh key config" i
ansible_ssh_private_key_file=${1:/home/${2:root}/.ssh/${3:id_rsa}}
endsnippet

snippet ansu "Ansible ssh user" b
ansible_ssh_user=${1:ec2-user}
endsnippet

snippet ansp "Ansible ssh password" b
ansible_password=${1:password}
endsnippet

snippet gr "Group" b
[${1:groupName}]
$2
endsnippet

snippet grv "Group vars" b
[${1:groupName}:vars]
$2
endsnippet

snippet grc "Group children" b
[${1:groupName}:children]
$2
endsnippet

snippet anh "Ansible node host" b
${1:nodeName} ansible_host=${2:node-dns-or-ip}
endsnippet

snippet hn "Host name" b
${1:server-dns-or-ip} ${2:server-name}
endsnippet

snippet rq1 "Ansible requirements" b
- name: ${1:nginx_role}
  src: ${2:https://github.com/bennojoy/nginx}
  version: ${3:main}
endsnippet

snippet rq2 "Ansible requirements" b
- src: ${1:git@gitlab.company.com:mygroup/ansible-core.git}
  scm: ${2:git}
  version: "${3:0.1}"
endsnippet

snippet tex "Latex" b
\documentclass[letterpaper,10.999pt]{article}

\usepackage{latexsym}
\usepackage[empty]{fullpage}
\usepackage{titlesec}
\usepackage{marvosym}
\usepackage[usenames,dvipsnames]{color}
\usepackage{verbatim}
\usepackage{enumitem}
\usepackage[hidelinks]{hyperref}
\usepackage{fancyhdr}
\usepackage[english]{babel}
\usepackage{tabularx}
\usepackage{latexsym}
\usepackage[empty]{fullpage}
\usepackage{titlesec}
\usepackage{marvosym}
\usepackage{enumitem}
\usepackage[pdftex]{hyperref}
\usepackage{framed}
\usepackage{times}
\usepackage{tocloft}
\usepackage{graphicx}
\usepackage{multirow}
\usepackage{tcolorbox}
\usepackage[utf8]{inputenc}
\input{glyphtounicode}

\pagestyle{fancy}
\fancyhf{} % clear all header and footer fields
\fancyfoot{}
\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}

% Adjust margins
\addtolength{\oddsidemargin}{-0.5in}
\addtolength{\evensidemargin}{-0.5in}
\addtolength{\textwidth}{1.1in}
\addtolength{\topmargin}{-.5in}
\addtolength{\textheight}{0.99in}


\urlstyle{same}

\raggedbottom
\raggedright
\setlength{\tabcolsep}{0in}
% Sections formatting
\titleformat{\section}{\vspace{-4pt}\scshape\raggedright\large
}{}{0em}{}[\color{black}\titlerule\vspace{-5pt}]

% Ensure that generate pdf is machine readable/ATS parsable
\pdfgentounicode=1

%-------------------------
% Custom commands
\newcommand{\resumeItem}[1]{
  \item\small{
    {#1 \vspace{-2pt}}
  }
}
\newcommand{\resumeSubheading}[4]{
  \vspace{1pt}\item
    \begin{tabular*}{0.97\textwidth}[t]{l@{\extracolsep{\fill}}r}
      \textbf{#1} & #2 \\
      \textit{\small#3} & \textit{\small #4} \\
    \end{tabular*}\vspace{-7pt}
}

\newcommand{\resumeSubSubheading}[2]{
    \item
    \begin{tabular*}{0.97\textwidth}{l@{\extracolsep{\fill}}r}
      \textit{\small#1} & \textit{\small #2} \\
    \end{tabular*}\vspace{-7pt}
}

\newcommand{\resumeProjectHeading}[2]{
    \item
    \begin{tabular*}{0.97\textwidth}{l@{\extracolsep{\fill}}r}
      \small#1 & #2 \\
    \end{tabular*}\vspace{-5pt}
}
\newcommand{\resumeSkills}[2]{
    \item
    \begin{tabular*}{0.97\textwidth}{l@{\extracolsep{\fill}}r}
      \small#1 & #2 \\
    \end{tabular*}
}

\newcommand{\resumeSubItem}[1]{\resumeItem{#1}\vspace{-4pt}}

\renewcommand\labelitemii{$\vcenter{\hbox{\tiny$\bullet$}}$}

\newcommand{\resumeSubHeadingListStart}{\begin{itemize}[leftmargin=0.15in, label={}]}
\newcommand{\resumeSubHeadingListEnd}{\end{itemize}\vspace{-5pt}}
\newcommand{\resumeItemListStart}{\begin{itemize}}
\newcommand{\resumeItemListEnd}{\end{itemize}\vspace{-5pt}}
\newcommand{\resumeSkillsStart}{\begin{itemize}[leftmargin=0.15in, label={}]}
\newcommand{\resumeSkillsdEnd}{\end{itemize}}
endsnippet

snippet crrb "Cronjob reboot" b
@reboot $1
endsnippet

