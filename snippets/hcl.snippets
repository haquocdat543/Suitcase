snippet pl "Packer plugin" b
packer {
  required_plugins {
    amazon = {
      source  = "github.com/hashicorp/amazon"
      version = "~> 1"
    }
  }
}

endsnippet

snippet v "Packer variable" b
variable "${1:ami_id}" {
  type    = ${2:string}
  default = "${3:ami-07c589821f2b353aa}"
}$4
endsnippet

snippet l "Packer local" b
locals {
    ${1:app_name} = "${2:httpd}"
}
endsnippet

snippet s "Packer source" b
source "${1:amazon-ebs}" "${2:httpd}" {
  ami_name      = "${local.app_name}"
  instance_type = "${3:t2.micro}"
  region        = "${4:ap-northeast-1}"
  source_ami    = "${var.ami_id}"
  ssh_username  = "${5:ec2-user}"
  tags = {
    Env  = "${6:DEV}"
    Name = "${7:${local.app_name}}"
  }
}$5
endsnippet

snippet b "Packer build" b
build {
  sources = ["${1:source.amazon-ebs.httpd}"]

  provisioner "${2:shell}" {
    script = "${3:script/script.sh}"
  }

  post-processor "${4:shell-local}" {
    inline = ["${5:echo foo}"]
  }
}$6

endsnippet

snippet pkr "Packer example" b
variable "ami_id" {
  type    = string
  default = "ami-07c589821f2b353aa"
}

locals {
    app_name = "httpd"
}

source "amazon-ebs" "httpd" {
  ami_name      = "${local.app_name}"
  instance_type = "t2.micro"
  region        = "ap-northeast-1"
  source_ami    = "${var.ami_id}"
  ssh_username  = "ubuntu"
  tags = {
    Env  = "DEV"
    Name = "${local.app_name}"
  }
}

build {
  sources = ["source.amazon-ebs.httpd"]

  provisioner "shell" {
    script = "script/script.sh"
  }

  post-processor "shell-local" {
    inline = ["echo foo"]
  }
}

endsnippet

snippet rtc "read terragrunt config" b
${1:account}_vars = read_terragrunt_config(find_in_parent_folders("$1.hcl}"))
endsnippet

snippet v4 "Terraform variables v4" b
locals {
  ${1:var} = ${2:value}
}
endsnippet

snippet v5 "Terraform variables v5" b
${1:var} = ${2:value}
endsnippet

snippet lv "local variable" b
${1:var} = local.account_vars.local.${2:value}
endsnippet

snippet gen "generate" b
generate "${1:Provider}" {
    path = "${2:provider.tf}"
    if_exists = "${3:overwrite_terragrunt}"
    contents = <<EOF
    $4
    EOF
}
endsnippet

snippet inp "inputs" b
inputs {
    $1
}
endsnippet

snippet inc "include" b
include "${1:root}"{
    path = find_in_parent_folders()
}
endsnippet

snippet tfs "terraform source" b
terraform {
    source = "${1:link}"
}

endsnippet

