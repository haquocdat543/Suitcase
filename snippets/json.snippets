priority -50

snippet s "String" b
"${1:key}": "${0:value}",
endsnippet

snippet n "Number" b
"${1:key}": ${0:value},
endsnippet

snippet a "Array" b
[
	${VISUAL}$0
],
endsnippet

snippet na "Named array" b
"${1:key}": [
	${VISUAL}$0
],
endsnippet

snippet o "Object" b
{
	${VISUAL}$0
},
endsnippet

snippet no "Named object" b
"${1:key}": {
	${VISUAL}$0
},
endsnippet

snippet null "Null" b
"${0:key}": null,
endsnippet


global !p
def compB(t, opts):
	if t:
		opts = [m[len(t):] for m in opts if m.startswith(t)]
	if len(opts) == 1:
		return opts[0]
	return "(" + '|'.join(opts) + ')'
endglobal

snippet b "Bool" b
"${1:key}": $2`!p snip.rv=compB(t[2], ['true', 'false'])`,
endsnippet
snippet mongoURI "mongoURI" b
{
	"mongoURI":"$1"
}
endsnippet

snippet q "backtick Quote" b
`$1`$2
endsnippet

snippet av "Ansible like variable" b
{{$1}}$2
endsnippet

snippet avq "Ansible like variable with quote" b
"{{$1}}"$2
endsnippet

snippet pkr "Packer" b
{
    "builders": [
      {
        "type": "amazon-ebs",
        "access_key": "access",
        "secret_key": "secret",
        "region": "ap-northeast-1",
        "ami_name": "ami-name",
        "source_ami": "ami-07c589821f2b353aa",
        "instance_type": "t2.micro",
        "ssh_username": "ec2-user"
      }
    ],
    "provisioners": [
      {
        "type": "shell",
        "inline": [
        "sudo apt-get update -y",
	"sudo apt-get install -y rabbitmq-server",
	"sudo systemctl enable rabbitmq-server",
	"sudo systemctl start rabbitmq-server"
        ]
      },
      {
        "type": "file",
        "source": "index.html",
        "destination": "/tmp/app.tar.gz"
      },
      {
        "type": "shell",
        "script": "k8s.sh"
      }
   ]
}
endsnippet

snippet pkrpolicy "Packer Policy" b
{
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": [
          "ec2:AttachVolume",
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:CopyImage",
          "ec2:CreateImage",
          "ec2:CreateKeypair",
          "ec2:CreateSecurityGroup",
          "ec2:CreateSnapshot",
          "ec2:CreateTags",
          "ec2:CreateVolume",
          "ec2:DeleteKeyPair",
          "ec2:DeleteSecurityGroup",
          "ec2:DeleteSnapshot",
          "ec2:DeleteVolume",
          "ec2:DeregisterImage",
          "ec2:DescribeImageAttribute",
          "ec2:DescribeImages",
          "ec2:DescribeInstances",
          "ec2:DescribeInstanceStatus",
          "ec2:DescribeRegions",
          "ec2:DescribeSecurityGroups",
          "ec2:DescribeSnapshots",
          "ec2:DescribeSubnets",
          "ec2:DescribeTags",
          "ec2:DescribeVolumes",
          "ec2:DetachVolume",
          "ec2:GetPasswordData",
          "ec2:ModifyImageAttribute",
          "ec2:ModifyInstanceAttribute",
          "ec2:ModifySnapshotAttribute",
          "ec2:RegisterImage",
          "ec2:RunInstances",
          "ec2:StopInstances",
          "ec2:TerminateInstances"
        ],
        "Resource": "*"
      }
    ]
  }

endsnippet

