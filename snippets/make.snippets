snippet make "Simple makefile" b
CC = ${1:gcc}
SOURCE = ${2:*.c}
OUTPUT = ${3:output}.exe

build: compile run

compile:
	$(CC) -o $(OUTPUT) $(SOURCE) 
run:
	./$3.exe
endsnippet

snippet docker "Makefile for docker build" b
NAME    := repo_name/image_name
TAG     := \$\$(git log -1 --pretty=%!H(MISSING))
IMG     := \${NAME}:\${TAG}
LATEST  := \${NAME}:latest

build:
  @docker build -t \${IMG} .
  @docker tag \${IMG} \${LATEST}

push:
  @docker push \${NAME}

login:
  @docker log -u \${DOCKER_USER} \${DOCKER_PASS}
endsnippet

snippet pn "Phony ( avoid same command and file name )" b
.PHONY: $1
endsnippet

snippet v1 "Variable at declaration" i
$1 = $2
endsnippet

snippet v2 "Variable at operation" i
$($1)$2
endsnippet

snippet ae "At echo ( print text )" b
@echo
endsnippet

snippet da "Dollar sign At ( print rule name )" b
$@
endsnippet

snippet dl "Dollar sign less ( print first prerequisite ) " b
$<
endsnippet

snippet dq "Dollar sign question ( print list of prerequisites newer than the target )" b
$?
endsnippet

snippet dad "Dollar sign At D ( print directory part of the target file's name )" b
$(@D)
endsnippet

snippet daf "Dollar sign At F ( print filename part of the target )" b
$(@D)
endsnippet

snippet dap "Dollar sign At P ( print directory part of the fisrt prerequisite )" b
$(@P)
endsnippet

snippet dam "Dollar sign At M ( print filename part of the first prerequisite )" b
$(@P)
endsnippet

