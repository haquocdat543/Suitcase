snippet cenjk "Centos jenkins" b
sudo yum update â€“y
sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
sudo yum upgrade -y
sudo dnf install java-17-amazon-corretto -y
sudo yum install jenkins -y
sudo systemctl enable jenkins
sudo systemctl start jenkins
endsnippet


snippet ujk "Test" b
# Install Openjdk and Jenkins
sudo apt update -y
wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc
echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list
sudo apt update -y
sudo apt install temurin-17-jdk -y
/usr/bin/java --version
curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt-get update -y
sudo apt-get install jenkins -y
sudo systemctl start jenkins

$1
endsnippet

snippet ujava "Test" b
# Install Java
sudo apt update -y
wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc
echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list
sudo apt update -y
sudo apt install temurin-17-jdk -y

$1
endsnippet

snippet utv "Test" b
# install trivy
sudo apt-get install wget apt-transport-https gnupg lsb-release -y
wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
sudo apt-get update
sudo apt-get install trivy -y

$1
endsnippet

snippet udk "Test" b
# Install Docker
sudo apt-get update
sudo apt-get install docker.io -y
sudo usermod -aG docker ubuntu
newgrp docker
sudo chmod 777 /var/run/docker.sock

$1
endsnippet

snippet usonar "Test" b
# Install Docker and Sonarqube
sudo apt-get update
sudo apt-get install docker.io -y
sudo usermod -aG docker ubuntu
newgrp docker
sudo chmod 777 /var/run/docker.sock
docker run -d --name sonar -p 9000:9000 sonarqube:lts-community

$1
endsnippet

snippet s1 "Sed type 1" b
sudo sed -i 's/${1:firstString}/${2:secondString}/g' ${3:Path}
endsnippet

snippet s2 "Sed type 2" b
sed -i "1s/^/${1:String}/" ${2:Path}
endsnippet

snippet s3 "Sed type 3" b
sudo sed '/^${1:String}/d' ${2:Path}
endsnippet

snippet s4 "Sed type 4" b
cat << EOF | sudo tee -a ${1:Path}
${2:Content}
EOF
endsnippet

snippet hn "Set hostname" b
hostnamectl set-hostname ${1:Sonarqube}
endsnippet

snippet ex "Export" b
export ${1:VER}="${2:0.40.2}"
endsnippet

snippet r "Echo and Read" b
echo "$1"
read $2
$3
endsnippet

snippet rr "Read without default" b
read -p "$1 [$2]: " $3
$4
endsnippet

snippet rd "Read with default" b
read -p "$1 [$2]: " $3
$3=${$3:-$2}
$4
endsnippet

snippet s "Test" b
#!/bin/bash

$1
endsnippet

snippet ec "Echo" b
echo "${1:Content}"
$2
endsnippet

snippet nd "Test" b
if [ ! -d ${1:folderPath} ]
then
	${2:mkdir}	
fi

$3
endsnippet
snippet d "Test" b
if [ -d ${1:folderPath} ]
then
	${2:mkdir}	
fi

$3
endsnippet
snippet nf "Test" b
if [ ! -f ${1:filePath} ]
then
	${2:mkdir}	
fi

$3
endsnippet
snippet f "Test" b
if [ -f ${1:filePath} ]
then
	${2:mkdir}	
fi

$3
endsnippet
