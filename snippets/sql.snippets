snippet cd "CREATE DATABASE" b
CREATE DATABASE ${1:NAME};$2
endsnippet

snippet dd "DROP DATABASE" b
DROP DATABASE ${1:NAME};$2
endsnippet

snippet u "USE" b
USE ${1:QUANLYGIAOVU};$2
endsnippet

snippet sl "SELECT" b
SELECT ${1:*} FROM ${2:Table};$3
endsnippet

snippet slw "SELECT FROM WHERE" b
SELECT ${1:*} 
FROM ${2:TABLE}
WHERE ${3:CONDITION};$4
endsnippet

snippet sld "SELECT FROM DISTINCT" b
SELECT DISTINCT ${1:COLUMNNAME}
FROM ${2:TABLE}
endsnippet

snippet  ut "UPDATE TABLE" b
UPDATE ${1:TABLENANE} 
endsnippet

snippet  us "UPDATE SET" b
UPDATE ${1:TABLENANE} 
SET ${2:MAP}
endsnippet

snippet  usw "UPDATE SET WHERE" b
UPDATE ${1:TABLENANE} 
SET ${2:MAP}
WHERE ${3:CONDITION};$4
endsnippet

snippet slt "SELECT TOP" b
SELECT TOP ${1:3} ${2:*}
endsnippet

snippet sltp "SELECT TOP PERCENTAGE" b
SELECT TOP ${1:50} PERCENT *
endsnippet

snippet slaff "FETCH FIRST" b
SELECT * FROM ${1:Customers}
FETCH FIRST ${2:50} PERCENT ROWS ONLY;
endsnippet

snippet ff "FETCH FIRST" b
FETCH FIRST ${1:50} PERCENT ROWS ONLY;
endsnippet

snippet lm "LIMIT" b
LIMIT ${1:3}; 
endsnippet

snippet  f "FROM" b
FROM ${1:TABLENANE};$2
endsnippet

snippet  df "DELETE FROM" b
DELETE FROM ${1:TABLENANE};$2
endsnippet

snippet  dfw "DELETE FROM WHERE" b
DELETE FROM ${1:TABLENANE} 
WHERE ${3:CONDITION};$4
endsnippet

snippet ct "CREATE TABLE" b
CREATE TABLE ${1:TABLENAME}(
	$2
);$3
endsnippet

snippet cv "CREATE VIEW" b
CREATE VIEW ${1:VIEW_NAME} AS
SELECT ${2:COLUMN1}
FROM ${3:TABLE_NAME}
WHERE ${4:CONDITION};$5
endsnippet

snippet corv "CREATE VIEW OR REPLACE" b
CREATE OR REPLACE VIEW ${1:VIEW_NAME} AS
SELECT ${2:COLUMN1}
FROM ${3:TABLE_NAME}
WHERE ${4:CONDITION};$5
endsnippet

snippet ci "CREATE INDEX" b
CREATE INDEX ${1:IDX_LASTNAME}
ON ${2:PERSONS} (${3:LASTNAME});$4
endsnippet

snippet dri "DROP INDEX" b
DROP INDEX ${1:INDEX_NAME} ON ${2:TABLE_NAME};$3
endsnippet

snippet drv "DROP VIEW" b
DROP VIEW ${1:BRAZIL};$2
endsnippet

snippet dt "DROP TABLE" b
DROP TABLE ${1:TABLENAME}
endsnippet

snippet int "INTEGER" b
${1:COLUMNNAME} INT,$2
endsnippet

snippet vc "VARCHAR" b
${1:COLUMNNAME} VARCHAR(${2:500}),$3
endsnippet

snippet smdt "SMALL DATETIME" b
${1:TUNGAY} SMALLDATETIME,$2
endsnippet

snippet nmr "NUMERIC" b
${1:DIEM} NUMERIC(${2:4,2}),$3
endsnippet

snippet tint "TINYINT" b
${1:LANTHI} TINYINT,$2
endsnippet

snippet cspk "CONSTRAINT PRIMARY KEY" b
CONSTRAINT ${1:PK_GIANGDAY} PRIMARY KEY (${2:MALOP, MAMH)},$3
endsnippet

snippet csunq "CONSTRAINT UNIQUE" b
CONSTRAINT ${1:PK_GIANGDAY} UNIQUE (${2:MALOP, MAMH)},$3
endsnippet

snippet in2 "INSERT" b
insert into ${1:DIEUKIEN} (${2:'COLULMNNAME'}) values(${3:'CSDL','CTRR'})$4
endsnippet

snippet ins "INSERT" b
insert into ${1:DIEUKIEN} values(${2:'CSDL','CTRR'})$3
endsnippet

snippet iit "INSERT INTO" b
INSERT INTO ${1:TABLENAME}
endsnippet

snippet ata "ALTER TABLE ADD" b
ALTER TABLE ${1:HOCVIEN} ADD $2
endsnippet

snippet atd "ALTER TABLE DROP COLUMN" b
ALTER TABLE ${1:HOCVIEN} DROP COLUMN $2
endsnippet

snippet atr "ALTER TABLE RENAME" b
ALTER TABLE ${1:HOCVIEN} RENAME COLUMN ${2:OLDCOLUMN} TO ${3:NEWCOLUMN}
endsnippet

snippet atm "ALTER TABLE MODIFY" b
ALTER TABLE ${1:HOCVIEN} MODIFY COLUMN ${2:COLUMNNAME} ${3:DATATYPE}
endsnippet

snippet idx "INDEX" i
INDEX $1;$2
endsnippet

snippet cst "CONSTRAINT" i
CONSTRAINT $1;$2
endsnippet

snippet v "VARIABLE" i
${1:NUOC} ${2:=} ${3:'VN'}
endsnippet

snippet v2 "VARIABLE" i
${1:NUOC} = '${2:VN}'$3
endsnippet

snippet dat "DATE" i
#${1:07}/${2:01}/${3:1997}#
endsnippet

snippet bt "BETWEEN" i
BETWEEN ${1:30000} AND ${1:40000}
endsnippet

snippet nbt "NOT BETWEEN" i
NOT BETWEEN ${1:30000} AND ${1:40000}
endsnippet

snippet wt "WHEN THEN" i
WHEN $1 THEN $2
endsnippet

snippet a "AND" i
AND $1
endsnippet

snippet 1 "AND" i
AND $1
endsnippet

snippet 2 "OR" i
OR $1
endsnippet

snippet 3 "NOT" i
NOT $1
endsnippet

snippet 4 "WHEN" i
WHEN $1
endsnippet

snippet 5 "THEN" i
THEN $1
endsnippet

snippet 6 "EXISTS" i
EXISTS $1
endsnippet

snippet 7 "ANY" i
ANY $1
endsnippet

snippet 8 "ALL" i
ALL $1
endsnippet

snippet 9 "INTO" i
INTO $1
endsnippet

snippet 10 "LIKE ( multi characters) ( _ single character ) ( [] set of character ) ( [a-f] range of character )" i
LIKE ${1:'G%'}
endsnippet

snippet 11 "SOME" i
SOME $1
endsnippet

snippet ne "NOT EXISTS" i
NOT EXISTS $1
endsnippet

snippet ni "NOT IN" i
NOT IN $1
endsnippet

snippet in "IS NULL" i
IS NULL 
endsnippet

snippet inn "IS NOT NULL" i
IS NOT NULL 
endsnippet

snippet sq "SINGLE QUOTE" i
'$1'$2
endsnippet

snippet dq "DOUBLE QUOTE" i
"$1"$2
endsnippet

snippet cn "COUNT" i
COUNT($1)$2
endsnippet

snippet dst "DISTINCT" i
DISTINCT $1
endsnippet

snippet ine "NOT EXISTS" i
IF NOT EXISTS $1
endsnippet

snippet p "PARENTHESIS" i
(
   $1
)
endsnippet

snippet pl "PARENTHESIS ONE LINE" i
($1)$2
endsnippet

snippet gb "GROUP BY" i
GROUP BY ${1:COUNTRY}
endsnippet

snippet ob "ORDER BY" i
ORDER BY ${1:COUNTRY}
endsnippet

snippet obd "ORDER BY DESC" i
ORDER BY ${1:PRICE} DESC
endsnippet

snippet oba "ORDER BY ASC" i
ORDER BY ${1:PRICE} ASC
endsnippet

snippet obb "ORDER BY ASC AND DESC" i
ORDER BY ${1:COUNTRY} ASC, ${2:CUSTOMERNAME} DESC;$3
endsnippet

snippet d "DELETE" i
DELETE
endsnippet

snippet i "INSERT" i
INSERT
endsnippet

snippet up "UPDATE" b
UPDATE
endsnippet

snippet di "DI" i
DELETE, INSERT
endsnippet

snippet du "DU" i
DELETE, UPDATE
endsnippet

snippet iu "IU" i
INSERT, UPDATE
endsnippet

snippet diu "DIU" i
DELETE, INSERT, UPDATE
endsnippet

snippet tg "TRIGGER" b
CREATE TRIGGER ${1:TRIGGERNAME} ON ${2:TABLE}
FOR {${3:DELETE, INSERT, UPDATE}}
AS 
  $4
endsnippet

snippet cp "CREATE PROCEDURE" b
CREATE PROCEDURE ${1:PROCEDURE_NAME}
AS
${2:CODE}
GO;
endsnippet

snippet cpp "CREATE PROCEDURE WITH PARAMS" b
CREATE PROCEDURE ${1:PROCEDURE_NAME} @$2
AS
${3:CODE}
GO;
endsnippet

snippet exp "EXEC WITH PARAMS" i
EXEC ${1:CONTENT} @$2;$3
endsnippet

snippet ex "EXEC" i
EXEC ${1:CONTENT};$2
endsnippet

snippet pr "PRINT" i
PRINT '${1:CONTENT}'$2
endsnippet

snippet rbt "ROLLBACK TRANSACTION" i
ROLLBACK TRANSACTION
endsnippet

snippet bge "BEGIN END" i
BEGIN
  $1
END
endsnippet

snippet cse "CASE END" i
CASE
  $1
END;
endsnippet

snippet s "SET" b
SET $1 = $2
endsnippet

snippet st "SET" b
SET 
endsnippet

snippet dot "DOT" b
$1.$2
endsnippet

snippet as "AS" b
AS [$1]$2
endsnippet

snippet mn "MIN" b
MIN(${1:PRICE})$2
endsnippet

snippet mx "MAX" b
MAX(${1:PRICE})$2
endsnippet

snippet sm "SUM" b
SUM(${1:QUANTITY})$2
endsnippet

snippet avg "AVG" b
AVG(${1:QUANTITY})$2
endsnippet

snippet gd "GETDATE FUNC" b
GETDATE()
endsnippet

snippet ijo "INNER JOIN ON" b
INNER JOIN $1 ON $2;
endsnippet

snippet ljo "LEFT JOIN ON" b
LEFT JOIN $1 ON $2;
endsnippet

snippet rjo "RIGHT JOIN ON" b
RIGHT JOIN $1 ON $2;
endsnippet

snippet fjo "FULL JOIN ON" b
FULL JOIN $1 ON $2;
endsnippet

snippet uni "UNION" b
UNION $2;
endsnippet

snippet unia "UNION ALL" b
UNION ALL $1;
endsnippet

snippet hv "HAVING" b
HAVING $1;
endsnippet

snippet isn "IS NULL FUNC" b
ISNULL($1)$2
endsnippet

snippet ifn "IF NULL FUNC" b
IFNULL($1)$2
endsnippet

snippet cle "COALESCE FUNC" b
COALESCE($1)$2
endsnippet

snippet cm "COMMENT" b
-- 
endsnippet

snippet cm2 "COMMENT TYPE 2" b
/* $1 */$2
endsnippet

snippet bkd "BACKUP DATABASE" b
BACKUP DATABASE ${1:DATABASENAME}
TO DISK = '${2:FILEPATH}';$3
endsnippet

snippet bkdwd "BACKUP DATABASE WITH DIFFERENTIAL" b
BACKUP DATABASE ${1:DATABASENAME}
TO DISK = '${2:FILEPATH}';
WITH DIFFERENTIAL;$3
endsnippet

snippet nn "NOT NULL" i
NOT NULL 
endsnippet

snippet unq "UNIQUE" i
UNIQUE
endsnippet

snippet pk "PRIMARY KEY" i
PRIMARY KEY
endsnippet

snippet fkr "FOREIGN KEY REFERENCE" i
FOREIGN KEY (${1:PersonID}) REFERENCES ${2:Persons}(${3:PersonID})
endsnippet

snippet chk "CHECK" i
CHECK ($1)$2
endsnippet

snippet df "DEFAULT" i
DEFAULT 
endsnippet
