snippet pod "Test" b
apiVersion: v1
kind: Pod
metadata:
  name: ${1:podName}
spec:
  containers:
  - name: ${2:containerName}
    image: ${3:image}
    ports:
    - containerPort: ${4:Port}
endsnippet
snippet rc "Test" b
apiVersion: v1
kind: ReplicationController
metadata:
  name: ${1:my-rc}
spec:
  replicas:  ${1:3} # number of the pod
  selector: # The pod selector determining what pods the RC is operating on
    ${1:app}: ${1:appName} #label value
  template: # pod template
    metadata:
      labels:
        ${1:podLabel}: ${1:podLabelValue}# label value
    spec:
      containers:
      - image: ${1:image}# image used to run container
        name: ${1:containerName}# name of the container
        ports:
          - containerPort: ${1:8080}# pod of the container
endsnippet
snippet rs "Test" b
apiVersion: apps/v1 # change version API
kind: ReplicaSet # change resource name
metadata:
  name: ${1:myReplicaSet}
spec:
  replicas: ${2:amount}
  selector:
    matchLabels: # change here 
      ${3:app}: ${4:appName}
  template:
    metadata:
      labels:
        ${5:podLabel}: ${6:podLabelValue}
    spec:
      containers:
      - image: ${7:imageName}
        name:${8:containerName} 
        ports:
          - containerPort: ${9:8080}
endsnippet
snippet deploy "Test" b
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${1:deployName}
  labels:
    app: ${2:deployAppName}
spec:
  replicas: ${3:amountOfReplica}
  selector:
    matchLabels:
      app: ${4:matchePodLabels}
  template:
    metadata:
      labels:
        app: ${5:podLabels}
    spec:
      containers:
      - name: ${6:containerName}
        image: ${7:image}
        ports:
        - containerPort: ${8:containerPort}
endsnippet
snippet svc "Test" b
apiVersion: v1
kind: Service
metadata:
  name: ${1:Name}
spec:
  selector:
      ${2:app} : ${3:myAppName}
  ports:
    - protocol: ${4:protocol}
      port: ${5:Port}
      targetPort: ${6:targetPort}
endsnippet
snippet svcn "Test" b
apiVersion: v1
kind: Service
metadata:
  name: ${1:Name}
spec:
  type: NodePort
  selector:
      ${2:app} : ${3:myAppName}
  ports:
    - protocol: ${4:protocol}
      port: ${5:Port}
      targetPort: ${6:targetPort}
      nodePort: ${7:NodePort}
endsnippet
snippet pv "Test" b
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ${1:my-pvc}
spec:
  capacity:
    storage: ${2:5Gi}
  volumeMode: ${3:Filesystem}
  accessModes:
    - ${4:ReadWriteOnce}
  persistentVolumeReclaimPolicy: ${5:Recycle}
  storageClassName: ${6:myStorageClass} 
endsnippet
